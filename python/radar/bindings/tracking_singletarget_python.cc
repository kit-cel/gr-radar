/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(tracking_singletarget.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(7d2d0f396f7818282264c078e7ff4de1)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <radar/tracking_singletarget.h>
// pydoc.h is automatically generated in the build directory
#include <tracking_singletarget_pydoc.h>

void bind_tracking_singletarget(py::module& m)
{

    using tracking_singletarget = ::gr::radar::tracking_singletarget;


    py::class_<tracking_singletarget,
               gr::block,
               gr::basic_block,
               std::shared_ptr<tracking_singletarget>>(
        m, "tracking_singletarget", D(tracking_singletarget))

        .def(py::init(&tracking_singletarget::make),
             py::arg("num_particle"),
             py::arg("std_range_meas"),
             py::arg("std_velocity_meas"),
             py::arg("std_accel_sys"),
             py::arg("threshold_track"),
             py::arg("threshold_lost"),
             py::arg("filter"),
             D(tracking_singletarget, make))


        ;
}
