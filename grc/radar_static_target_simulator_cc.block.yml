# auto-generated by grc.converter

id: radar_static_target_simulator_cc
label: Static Target Simulator
category: '[RADAR]/RADAR'

parameters:
-   id: range
    label: Range [m]
    dtype: real_vector
-   id: velocity
    label: Velocity [m/s]
    dtype: real_vector
-   id: rcs
    label: RCS
    dtype: real_vector
-   id: azimuth
    label: Azimuth [Degrees]
    dtype: real_vector
-   id: position_rx
    label: Position RX antennas [m] (relative to TX)
    dtype: real_vector
    default: 0,
    hide: part
-   id: samp_rate
    label: Sample rate [Hz]
    dtype: int
-   id: center_freq
    label: Center frequency [Hz]
    dtype: float
-   id: self_coupling_db
    label: Self coupling [dB]
    dtype: float
-   id: rndm_phaseshift
    label: Random phase shift
    dtype: bool
    default: 'True'
    options: ['True', 'False']
-   id: self_coupling
    label: Self coupling
    dtype: bool
    default: 'True'
    options: ['True', 'False']
-   id: len_key
    label: Packet length key
    dtype: string
    default: '"packet_len"'

inputs:
-   label: IQ in
    domain: stream
    dtype: complex

outputs:
-   label: IQ out
    domain: stream
    dtype: complex
    multiplicity: ${ len(position_rx) }

templates:
    imports: import radar
    make: radar.static_target_simulator_cc(${range}, ${velocity}, ${rcs}, ${azimuth},
        ${position_rx}, ${samp_rate}, ${center_freq}, ${self_coupling_db}, ${rndm_phaseshift},
        ${self_coupling}, ${len_key})
    callbacks:
    - setup_targets(${range}, ${velocity}, ${rcs}, ${azimuth}, ${position_rx}, ${samp_rate},
        ${center_freq}, ${self_coupling_db}, ${rndm_phaseshift}, ${self_coupling})

file_format: 1
